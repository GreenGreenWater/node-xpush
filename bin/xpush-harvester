#!/usr/bin/env node

var harvester = require('../lib/xpush-harvester'),
    influx    = require('influx'),
    argv      = require('optimist').argv,
    fs        = require('fs'),
    util      = require('util');

var help = [
  "",
  "USAGE: xpush-harvester [options]",
  "",
  "options:",
  "  --config FILE    (mandatory!) Location of the configuration file for the xpush server",
  "  -h, --help       You're staring at it",
  ""
].join('\n');

if (argv.h || argv.help || Object.keys(argv).length === 2 || !argv.config) {
  return util.puts(help);
}

var config = {};

try {
  var data = fs.readFileSync(argv.config);
  config = JSON.parse(data.toString());
} catch (ex) {
  console.error('Error starting xpush-admin server: ' + ex);
  process.exit(1);
}

var serverInflux = influx({
  host : config.influxdb.host,
  port : config.influxdb.port});

function startApp() {

  harvester.start(config);

}

if(config.influxdb.dropandrun){
  console.log("Drop Database");
  serverInflux.deleteDatabase(config.influxdb.database, function(err,result){
    createDatabaseAndUser();
  });
}else{
  createDatabaseAndUser();
}

function createDatabaseAndUser(){
  serverInflux.getDatabaseNames(function(err, dbs) {
  if(err) throw err;
  if(dbs.indexOf(config.influxdb.database) === -1) {
    console.log('Creating Database');
    serverInflux.createDatabase(config.influxdb.database, function(err) {
      if(err) throw err;
      console.log('Creating User');
      serverInflux.createUser(config.influxdb.database, config.influxdb.username, config.influxdb.password, function(err) {
        if(err) throw err;
        startApp();
      });
    });
  } else {
    startApp();
  }
});  
}





